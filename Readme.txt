1. Team member: Zimu Wang, Wei Weng, Diqiu Zhou
2. Module design: In this module we designed three structs: subtask, task and core. The subtask struct was designed according to the instruction given in step4, and each task struct would hold its subtask list, and the core list to maintain a list of each core in which maintains a list of subtasks assigned to this core. All the data were initialized before the running mode's execution in calibrate.c.
3. Testing and evaluation: We tested four different headers, header_1 includes test cases in which all tasks were easily scheduable (only 1 utilization for each task), in which case all of them get scheduled correctly. Header_2 includes test cases in which there are 6 subtasks and all of them have utilization of 85. In this case only 4 got correctly scheduled because the no core can afford to execute two tasks at the same time. Header_3 includes test cases in which all tasks' substasks' total utilization is 85. In this case each task's subtasks got assigned to the same core because the core can afford to run them together. Header_4 includes test cases in which all but one task's subtasks' total utilization is 85, and one task's total utilization is 110. In this case one subtask from the 110 task got dropped off and all others were scheduled.
4. Build instruction: see make.sh
5. Development effort: 50 hours.
